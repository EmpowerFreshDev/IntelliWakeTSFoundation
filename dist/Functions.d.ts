import { Moment, MomentBuiltinFormat } from 'moment';
export declare type IChanges = {
    [key: string]: any;
};
export declare const initialChanges: {};
export declare type IIDChanges = {
    [key: number]: {
        [key: string]: any;
    };
};
export declare const initialIDChanges: {};
export declare const ToSnakeCase: (str: string) => string;
export declare function PagesForRange(current: number, length: number, spread?: number): (number | null)[];
export declare const DataToCSVExport: (filename: string, csvData: any) => void;
export declare const DataToCSVExportNoQuotes: (filename: string, csvData: any) => void;
export declare const JSONParse: (json: string | null | undefined) => object | null;
export declare const ReplaceAll: (find: string, replace: string, subject: string) => string;
export declare const ReplaceLinks: (subject: string) => string;
export declare const CleanScripts: (subject: string) => string;
export declare const TextToHTML: (subject: string) => string;
export declare const LeftPad: (subject: string, length: number, padString: string) => string;
export declare const RightPad: (subject: string, length: number, padString: string) => string;
export declare const Trunc: (subject: string, length: number) => string;
export declare const CleanNumber: (value: any) => number;
export declare const ToCurrency: (value: any, decimals?: number) => string;
export declare const ToPercent: (value: any, decimals?: number) => string;
export declare const ToCurrencyBlank: (value: any, decimals?: number) => string;
export declare const ToCurrencyDash: (value: any, decimals?: number) => string;
export declare const ToPercentBlank: (value: any, decimals?: number) => string;
export declare const ToPercentDash: (value: any, decimals?: number) => string;
export declare const ToDigits: (value: any, decimals?: number) => string;
export declare const ToDigitsBlank: (value: any, decimals?: number) => string;
export declare const ToDigitsDash: (value: any, decimals?: number) => string;
export declare const ToStringArray: (value: string | string[]) => string[];
export declare const HasPathComponent: (search: string) => boolean;
export declare const GetPathComponentAfter: (search: string) => any | undefined;
export declare const GetPathThrough: (search: string) => any | undefined;
export declare const CaptureGPS: () => Promise<Position | null>;
export declare const GoogleMapsGPSLink: (dataArray: any, prefix?: string) => string;
export declare const GoogleMapsAddressLink: (dataArray: any, prefix?: string) => string;
export declare const IsValidInputDecimal: (value: string) => boolean;
export declare const FormatPhoneNumber: (phone: string, forceNumeric?: boolean) => string;
export declare const FormatPhoneNumberDots: (phone: string, forceNumeric?: boolean) => string;
export declare const FormatZip: (zip: string) => string;
export declare const FormatExternalURL: (url: string) => string;
export interface ISortColumn {
    primarySort: string;
    primaryAscending: boolean;
    primaryEmptyToBottom: null | 'string' | 'number' | 'null';
    secondarySort: string | null;
    secondaryAscending: boolean;
    secondaryEmptyToBottom: null | 'string' | 'number' | 'null';
}
export declare const initialSortColumn: ISortColumn;
export declare const SortColumnUpdate: (columnToSort: string, sortColumn: ISortColumn, firstClickAscending?: boolean, emptyToBottom?: null | 'string' | 'number' | 'null') => ISortColumn;
export declare const SortColumns: <T>(arrayTable: T[], sortColumn: ISortColumn) => T[];
export declare const SearchTerms: (search: string | null | undefined, toLowerCase?: boolean) => string[];
export declare const StringContainsSearchTerms: (value: string | null | undefined, searchTerms: string[]) => boolean;
export declare const StringContainsSearch: (value: string | null | undefined, search: string | null | undefined) => boolean;
export declare const ObjectContainsSearchTerms: (object: any | null | undefined, searchTerms: string[]) => boolean;
export declare const ObjectContainsSearch: (object: any | null | undefined, search: string | null | undefined) => boolean;
export declare const SearchRows: <T>(arrayTable: T[], search: string) => T[];
export declare const SearchRow: (searchItem: any, search: string) => boolean;
export declare const SearchSort: <T>(arrayTable: T[], search: string, sortColumn: ISortColumn) => T[];
export declare const RemoveDupProperties: (original: IChanges, propsToRemove: IChanges) => IChanges;
export declare const RemoveDupPropertiesByID: (original: IIDChanges, propsToRemove: IIDChanges) => IIDChanges;
export declare const RemoveDupPropertiesByIDArray: (original: IIDChanges, propsToRemoveArray: any[]) => IIDChanges;
export declare const GenerateUUID: () => string;
export declare const DownloadBase64Data: (fileName: string, base64: string, type: string) => void;
export declare const DisplayNameFromFL: (first?: string | undefined, last?: string | undefined, middle?: string | undefined, suffix?: string | undefined) => string;
export declare const DisplayNameFromObject: (object?: any, prefix?: string | undefined) => string;
export declare const MOMENT_FORMAT_DATE = "YYYY-MM-DD";
export declare const MOMENT_FORMAT_TIME_SECONDS = "HH:mm:ss";
export declare const MOMENT_FORMAT_TIME_NO_SECONDS = "HH:mm";
export declare const MOMENT_FORMAT_DATE_TIME: string;
export declare const MomentFromUTCString: (date: string | Moment | Date | null | undefined) => string | null;
export declare const MomentWithFormatUTC: (value: string | Moment | Date | null | undefined, format: string | MomentBuiltinFormat | undefined, strict: boolean, convertFromUTC: boolean) => Moment;
export declare const MomentTimeString: (value: string | Moment | Date | null | undefined, format?: string, convertFromUTC?: boolean) => string | null;
export declare const MomentDateString: (value: string | Moment | Date | null | undefined, format?: string, convertFromUTC?: boolean) => string | null;
export declare const MomentDateTimeString: (value: string | Moment | Date | null | undefined, format?: string, convertFromUTC?: boolean) => string | null;
export declare const MomentDisplayDayDateTime: (date: string | Moment | Date | null | undefined, convertFromUTC?: boolean) => string | null;
export declare const MomentDisplayDayDate: (date: string | Moment | Date | null | undefined, convertFromUTC?: boolean) => string | null;
export declare const MomentDisplayTime: (date: string | Moment | Date | null | undefined, convertFromUTC?: boolean) => string | null;
export declare const IsOn: (value: any) => boolean;
export declare const UCWords: (str: string | null) => string | null;
export declare const RandomString: (length: number, validChars?: string) => string;
export declare type TFindIsActive = boolean | null;
export declare const AddressCopy: (fromObject: any, fromPrefix: string, toObject: any, toPrefix: string, includeName?: boolean, includePhone?: boolean, includeTimeZone?: boolean, includeGPS?: boolean) => void;
export declare const AddressValid: (address: any, prefix?: string | undefined) => boolean;
export declare const AddressSingleRow: (object: any, prefix?: string | undefined) => string;
export declare const ObjectDiffs: (compare: any, comparedTo: any, excludeKeys?: string[]) => any;
export declare const ReduceObjectToOtherKeys: (main: any, reduceTo: any, excludeKeys?: string[]) => any;
