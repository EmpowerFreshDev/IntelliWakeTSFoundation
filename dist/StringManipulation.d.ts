export declare const ToSnakeCase: (str: string) => string;
export declare const ReplaceAll: (find: string, replace: string, subject: string) => string;
export declare const ReplaceLinks: (subject: string) => string;
export declare const CleanScripts: (subject: string) => string;
export declare const TextToHTML: (subject: string) => string;
export declare const LeftPad: (subject: string, length: number, padString: string) => string;
export declare const RightPad: (subject: string, length: number, padString: string) => string;
export declare const CleanNumber: (value: any) => number;
export declare const ToCurrency: (value: any, decimals?: number) => string;
export declare const ToPercent: (value: any, decimals?: number) => string;
export declare const ToCurrencyBlank: (value: any, decimals?: number) => string;
export declare const ToCurrencyDash: (value: any, decimals?: number) => string;
export declare const ToPercentBlank: (value: any, decimals?: number) => string;
export declare const ToPercentDash: (value: any, decimals?: number) => string;
export declare const ToDigits: (value: any, decimals?: number) => string;
export declare const ToDigitsBlank: (value: any, decimals?: number) => string;
export declare const ToDigitsDash: (value: any, decimals?: number) => string;
export declare const ToStringArray: (value: string | string[]) => string[];
export declare const FormatPhoneNumber: (phone: string, forceNumeric?: boolean) => string;
export declare const FormatPhoneNumberDots: (phone: string, forceNumeric?: boolean) => string;
export declare const FormatZip: (zip: string) => string;
export declare const FormatExternalURL: (url: string) => string;
export declare const DisplayNameFromFL: (first?: string | undefined, last?: string | undefined, middle?: string | undefined, suffix?: string | undefined) => string;
export declare const DisplayNameFromObject: (object?: any, prefix?: string | undefined) => string;
export declare const UCWords: (str: string | null) => string | null;
export declare const RandomString: (length: number, validChars?: string) => string;
